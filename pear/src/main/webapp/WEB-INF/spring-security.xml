<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:security="http://www.springframework.org/schema/security"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<!-- 通过CAS进行认证 -->
	<!-- http://static.springsource.org/spring-security/site/docs/3.1.x/reference/cas.html -->
	<bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
		<property name="service" value="http://www.pear.com:18080/sss-pear/j_spring_cas_security_check" />
		<property name="sendRenew" value="false" />
		<property name="authenticateAllArtifacts" value="true" />
	</bean>

	<security:http entry-point-ref="casEntryPoint">
		<security:intercept-url pattern="/**" access="ROLE_USER" />
		<security:custom-filter position="CAS_FILTER" ref="casFilter" />
	</security:http>

	<bean id="casFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="proxyGrantingTicketStorage" ref="pgtStorage" />
		<property name="proxyReceptorUrl" value="j_spring_cas_security_proxyreceptor" />
		<property name="serviceProperties" ref="serviceProperties" />
		<property name="authenticationDetailsSource">
			<bean class="org.springframework.security.cas.web.authentication.ServiceAuthenticationDetailsSource" />
		</property>
	</bean>

	<bean id="casEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<property name="loginUrl" value="https://www.cas.com:9443/sss-cas/login" />
		<property name="serviceProperties" ref="serviceProperties" />
	</bean>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="casAuthenticationProvider" />
	</security:authentication-manager>

	<bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<property name="authenticationUserDetailsService">
			<bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<constructor-arg ref="userService" />
			</bean>
		</property>
		<property name="serviceProperties" ref="serviceProperties" />
		<property name="ticketValidator">
			<bean class="org.jasig.cas.client.validation.Cas20ProxyTicketValidator">
				<constructor-arg index="0" value="https://www.cas.com:9443/sss-cas" />
				<property name="proxyCallbackUrl" value="https://www.pear.com:18443/sss-pear/j_spring_cas_security_proxyreceptor" />
				<property name="proxyGrantingTicketStorage" ref="pgtStorage" />
				<property name="acceptAnyProxy" value="true" />
			</bean>
		</property>
		<property name="key" value="an_id_for_this_auth_only" />
		<property name="statelessTicketCache">
			<bean class="org.springframework.security.cas.authentication.EhCacheBasedTicketCache">
				<property name="cache">
					<bean class="net.sf.ehcache.Cache" init-method="initialise" destroy-method="dispose">
						<constructor-arg value="casTickets" />
						<constructor-arg value="50" />
						<constructor-arg value="true" />
						<constructor-arg value="false" />
						<constructor-arg value="120" />
						<constructor-arg value="60" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<!--
		NOTE: In a real application you should not use an in memory implementation. You will also want
				to ensure to clean up expired tickets by calling ProxyGrantingTicketStorage.cleanup()
	-->
	<bean id="pgtStorage" class="org.jasig.cas.client.proxy.ProxyGrantingTicketStorageImpl" />

	<security:user-service id="userService">
		<security:user name="wisetop" authorities="ROLE_USER" />
	</security:user-service>

</beans>
